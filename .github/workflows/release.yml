name: Release

on:
  push:
    tags:
      - "v*"

env:
  GO_VERSION: "1.23"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "version_no_v=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if git tag --list | head -2 | tail -1 > /dev/null; then
            PREVIOUS_TAG=$(git tag --list | head -2 | tail -1)
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s (%h)" ${PREVIOUS_TAG}..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog=Initial release" >> $GITHUB_OUTPUT
          fi

      - name: Build cross-platform binaries
        run: |
          mkdir -p dist/

          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.version_no_v }}" \
            -o dist/webextractor-linux-amd64 .
            
          # Linux ARM64  
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.version_no_v }}" \
            -o dist/webextractor-linux-arm64 .
            
          # Darwin AMD64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.version_no_v }}" \
            -o dist/webextractor-darwin-amd64 .
            
          # Darwin ARM64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.version_no_v }}" \
            -o dist/webextractor-darwin-arm64 .
            
          # Windows AMD64
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.version_no_v }}" \
            -o dist/webextractor-windows-amd64.exe .

      - name: Create archives
        run: |
          cd dist/

          # Linux
          tar -czf webextractor-${{ steps.version.outputs.version_no_v }}-linux-amd64.tar.gz webextractor-linux-amd64
          tar -czf webextractor-${{ steps.version.outputs.version_no_v }}-linux-arm64.tar.gz webextractor-linux-arm64

          # Darwin
          tar -czf webextractor-${{ steps.version.outputs.version_no_v }}-darwin-amd64.tar.gz webextractor-darwin-amd64
          tar -czf webextractor-${{ steps.version.outputs.version_no_v }}-darwin-arm64.tar.gz webextractor-darwin-arm64

          # Windows
          zip webextractor-${{ steps.version.outputs.version_no_v }}-windows-amd64.zip webextractor-windows-amd64.exe

      - name: Generate checksums
        run: |
          cd dist/
          sha256sum *.tar.gz *.zip > checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ### Linux/macOS
            ```bash
            # Download and extract
            wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/webextractor-${{ steps.version.outputs.version_no_v }}-linux-amd64.tar.gz
            tar -xzf webextractor-${{ steps.version.outputs.version_no_v }}-linux-amd64.tar.gz
            chmod +x webextractor-linux-amd64
            sudo mv webextractor-linux-amd64 /usr/local/bin/webextractor
            ```

            ### Windows
            Download the `.zip` file and extract `webextractor.exe` to your desired location.

            ## Checksums
            See `checksums.txt` for file integrity verification.

          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
